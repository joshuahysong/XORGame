@model XORGame.Data.DataTransferEntities.BattleData
@using XORGame.Data.DataTransferEntities;
@using XORGame.Engines;
@{ 
    var selectedCharacter = Model.Characters.Where(c => c.IsSelected).FirstOrDefault();
}

<div class ="row align-items-stretch">
    <div class="col-12 col-md-8">
        @for (var y = 0; y < BattleEngine.BoardY; y++)
        {
            <div class="row no-gutters">
                @for (var x = 0; x < BattleEngine.BoardY; x++)
                {
                    @Html.Partial("_Boardspace", Model.Boardspaces
                        .FirstOrDefault(bs => bs.IsEqualCoordinates(new System.Drawing.Point(x, y))));
                }
            </div>
        }
    </div>
    <div class="col-12 col-md-4">
        <div class="card ability-panel h-100 mt-2 mt-md-0">
            <div class="card-body">
                <h4 class="card-title">@selectedCharacter.Name</h4>
                <hr />
                @foreach (var ability in selectedCharacter.Abilities)
                {
                    <div class="row mb-2">
                        <div class="col-md-8 col-lg-10 col-10 pr-0">
                            <div class="btn-group btn-block" role="group">
                            @if (ability.IsOnCooldown())
                            {
                                <button class="btn btn-secondary" disabled="disabled">@ability.CurrentCooldown</button>
                            }
                            @switch (ability.Type)
                            {
                                case "Ranged":
                                    <button class="btn btn-danger btn-ability btn-block" 
                                            @(ability.IsOnCooldown() ? "disabled" : string.Empty) 
                                            data-abilityid="@ability.ID">
                                        <div class="text-left d-md-none d-lg-block"><i class="fas fa-bullseye"></i>&nbsp;@ability.Name</div>
                                        <div class="text-left d-none d-lg-none d-md-block"><i class="fas fa-bullseye"></i></div>
                                    </button>
                                    break;
                                case "Melee":
                                    <button class="btn btn-danger btn-ability btn-block"
                                            @(ability.IsOnCooldown() ? "disabled" : string.Empty)
                                            data-abilityid="@ability.ID">
                                        <div class="text-left d-md-none d-lg-block"><i class="fas fa-hand-rock"></i>&nbsp;@ability.Name</div>
                                        <div class="text-left d-none d-lg-none d-md-block"><i class="fas fa-hand-rock"></i></div>
                                    </button>
                                    break;
                                case "Heal":
                                    <button class="btn btn-success btn-ability btn-block"
                                            @(ability.IsOnCooldown() ? "disabled" : string.Empty)
                                            data-abilityid="@ability.ID">
                                        <div class="text-left d-md-none d-lg-block"><i class="fas fa-heart"></i>&nbsp;@ability.Name</div>
                                        <div class="text-left d-none d-lg-none d-md-block"><i class="fas fa-heart"></i></div>
                                    </button>
                                    break;
                            }
                            </div>
                        </div>
                        <div class="col-2 pl-2">
                            <div class="btn-group" role="group">
                                <button class="btn btn-info"><i class="fas fa-info"></i></button>
                            </div>
                        </div>
                    </div>
                }
                <hr />
                <div class="row">
                    <div class="col"><label>HP</label></div>
                    <div class="col">@selectedCharacter.CurrentHealth / @selectedCharacter.TotalHealth</div>
                </div>
                <div class="row">
                    <div class="col"><label>Attack</label></div>
                    <div class="col">@selectedCharacter.Attack</div>
                </div>
                <div class="row">
                    <div class="col"><label>Defense</label></div>
                    <div class="col">@selectedCharacter.Defense</div>
                </div>
                <div class="row">
                    <div class="col"><label>Speed</label></div>
                    <div class="col">@selectedCharacter.Speed</div>
                </div>
                <hr />
            </div>
        </div>
    </div>
</div>
